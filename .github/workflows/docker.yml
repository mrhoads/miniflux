name: Docker
on:
  workflow_dispatch:
    
  schedule:
    - cron: '0 1 * * *'
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: miniflux
jobs:
  test-docker-images:
    if: github.event.pull_request
    name: Test Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Alpine image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./packaging/docker/alpine/Dockerfile
          push: false
          tags: ${{ github.repository_owner }}/miniflux:alpine-dev
      - name: Test Alpine Docker image
        run: docker run --rm ${{ github.repository_owner }}/miniflux:alpine-dev miniflux -i

  publish-docker-images:
    if: ${{ ! github.event.pull_request }}
    name: Publish Images
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Generate Alpine Docker tag
        id: docker_alpine_tag
        run: |
          DOCKER_IMAGE=${{ github.repository_owner }}/miniflux
          DOCKER_VERSION=dev
          if [ "${{ github.event_name }}" = "schedule" ]; then
          DOCKER_VERSION=nightly
          TAGS="docker.io/${DOCKER_IMAGE}:${DOCKER_VERSION},ghcr.io/${DOCKER_IMAGE}:${DOCKER_VERSION},quay.io/${DOCKER_IMAGE}:${DOCKER_VERSION}"
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
          DOCKER_VERSION=${GITHUB_REF#refs/tags/}
          TAGS="docker.io/${DOCKER_IMAGE}:${DOCKER_VERSION},ghcr.io/${DOCKER_IMAGE}:${DOCKER_VERSION},quay.io/${DOCKER_IMAGE}:${DOCKER_VERSION},docker.io/${DOCKER_IMAGE}:latest,ghcr.io/${DOCKER_IMAGE}:latest,quay.io/${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          registry: ${{ secrets.ACR_ENDPOINT }}

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./packaging/docker/alpine/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ github.run_id }}
